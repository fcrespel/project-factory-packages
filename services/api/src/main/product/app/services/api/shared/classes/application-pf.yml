spring:
  datasource:
    username: @{cas.db.user}
    password: %{CAS_DB_PASSWORD}
    url: "jdbc:mysql://@{mysql.host}:@{mysql.port}/@{cas.db.name}?useSSL=false"
  jpa:
    databasePlatform: org.hibernate.dialect.MySQL5InnoDBDialect
server:
  port: @{package.port.http}
security:
  user:
    name: @{root.user}
    password: %{ROOT_PASSWORD}
    role: USER,ADMIN
  oauth2:
    client:
      accessTokenUri: @{cas.url}oauth2.0/accessToken
      userAuthorizationUri: @{cas.url}oauth2.0/authorize
      clientId: @{product.id}-api
      clientSecret: %{API_OAUTH_PASSWORD}
    resource:
      userInfoUri: @{cas.url}oauth2.0/profile
      preferTokenInfo: false
logging:
  path: @{package.log}
authorization:
  userAttribute: "['id']"
  groupAttribute: "['attributes']?.get('groups')"
  authorityMapping:
    ROLE_USER: GROUP_@{product.group.users}
    ROLE_ADMIN: GROUP_@{product.group.admins}
ldap:
  contextSource:
    url: ldap://@{ldap.host}:@{ldap.port}
    base: @{ldap.base.dn}
    userDn: @{ldap.root.dn}
    password: %{LDAP_ROOT_PASSWORD}
