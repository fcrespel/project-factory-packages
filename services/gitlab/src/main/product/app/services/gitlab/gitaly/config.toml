# Gitaly configuration file

socket_path = "@{package.app}/tmp/sockets/private/gitaly.socket"

# The directory where Gitaly's executables are stored
bin_dir = "@{package.app}/gitaly"

# # Optional: listen on a TCP socket. This is insecure (no authentication)
# listen_addr = "localhost:9999"
#

# # Optional: export metrics via Prometheus
# prometheus_listen_addr = "localhost:9236"
#

# # Git executable settings
[git]
bin_path = "@{product.app}/system/git/bin/git"

[[storage]]
name = "default"
path = "@{package.data}/repositories"

# # You can optionally configure more storages for this Gitaly instance to serve up
#
# [[storage]]
# name = "other_storage"
# path = "/mnt/other_storage/repositories"
#

# # You can optionally configure Gitaly to output JSON-formatted log messages to stdout
# [logging]
# format = "json"
# # Additionally exceptions from the Go server can be reported to Sentry
# sentry_dsn = "https://<key>:<secret>@sentry.io/<project>"
# # Exceptions from gitaly-ruby can also be reported to Sentry
# ruby_sentry_dsn = "https://<key>:<secret>@sentry.io/<project>"

# # You can optionally configure Gitaly to record histogram latencies on GRPC method calls
# [prometheus]
# grpc_latency_buckets = [0.001, 0.005, 0.025, 0.1, 0.5, 1.0, 10.0, 30.0, 60.0, 300.0, 1500.0]

[gitaly-ruby]
# The directory where gitaly-ruby is installed
dir = "@{package.app}/gitaly/ruby"

# # Gitaly-ruby resident set size (RSS) that triggers a memory restart (bytes)
# max_rss = 300000000
# 
# # Grace period before a gitaly-ruby process is forcibly terminated after exceeding max_rss (seconds)
# graceful_restart_timeout = "10m"
# 
# # Time that gitaly-ruby memory must remain high before a restart (seconds)
# restart_delay = "5m"

[gitlab-shell]
# The directory where gitlab-shell is installed
dir = "@{package.app}/shell"

# # You can adjust the concurrency of each RPC endpoint
# [[concurrency]]
# rpc = "/gitaly.RepositoryService/GarbageCollect"
# max_per_repo = 1
